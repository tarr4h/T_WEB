<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.t_web.program.comn.dao.ComnDao">

    <insert id="insertMapData">
        INSERT INTO MAP_DATA
        (ID, NAME, PX, PY, ADDRESS, MCID, MCID_NAME, AVAILABLE)
        VALUES(
               #{bookmarkId}
            ,   #{name}
            ,   #{px}
            ,   #{py}
            ,   #{address}
            ,   #{mcid}
            ,   #{mcidName}
            ,   #{available}
        )
    </insert>

    <select id="selectMapDataCount" resultType="int">
        SELECT  COUNT(*)
        FROM    MAP_DATA
        WHERE   ID = #{bookmarkId}
    </select>

    <select id="selectMapDataList" resultType="com.demo.t_web.program.comn.model.MapData">
        SELECT  *
        FROM    MAP_DATA
        WHERE   CAST(PX AS DOUBLE PRECISION) BETWEEN CAST(#{minLng} AS DOUBLE PRECISION) AND CAST(#{maxLng} AS DOUBLE PRECISION)
            AND CAST(PY AS DOUBLE PRECISION) BETWEEN CAST(#{minLat} AS DOUBLE PRECISION) AND CAST(#{maxLat} AS DOUBLE PRECISION)
            <if test="mcid != null and mcid != ''">
            AND MCID = #{mcid}
            </if>
            <if test="addr1 != null and addr1 != ''">
            AND ADDR_1 = #{addr1}
            </if>
            <if test="addr2 != null and addr2 != ''">
            AND ADDR_2 = #{addr2}
            </if>
            <if test="placeName != null and placeName instanceof java.util.ArrayList">
                <foreach collection="placeName" item="item" separator="OR" open="AND (" close=")">
                    NAME LIKE CONCAT('%', TRIM(#{item}), '%')
                </foreach>
            </if>
    </select>

    <select id="selectMcidList" resultType="Tmap">
        SELECT  MCID
            ,   MCID_NAME
        FROM    MAP_DATA
        WHERE   CAST(PX AS DOUBLE PRECISION) BETWEEN CAST(#{minLng} AS DOUBLE PRECISION) AND CAST(#{maxLng} AS DOUBLE PRECISION)
            AND CAST(PY AS DOUBLE PRECISION) BETWEEN CAST(#{minLat} AS DOUBLE PRECISION) AND CAST(#{maxLat} AS DOUBLE PRECISION)
        GROUP BY MCID, MCID_NAME
        ORDER BY MCID_NAME DESC
    </select>

    <select id="getRegion1" resultType="Tmap">
        SELECT  ADDR_1
        FROM    MAP_DATA
        WHERE   ADDR_1 != ''
        GROUP BY ADDR_1
        ORDER BY ADDR_1
    </select>

    <select id="getRegion2" resultType="Tmap">
        SELECT  ADDR_2
        FROM    MAP_DATA
        WHERE   ADDR_2 != ''
            AND ADDR_1 = #{addr1}
        GROUP BY ADDR_2
        ORDER BY ADDR_2
    </select>

    <select id="getRegionMapData" resultType="com.demo.t_web.program.comn.model.MapData">
        SELECT  *
        FROM    MAP_DATA
        <where>
            <if test="addr1 != null and addr1 != ''">
                ADDR_1 = #{addr1}
            </if>
            <if test="addr2 != null and addr2 != ''">
                AND ADDR_2 = #{addr2}
            </if>
        </where>
    </select>

    <select id="checkVisit" resultType="int">
        SELECT  COUNT(*)
        FROM    VISIT_LOG
        WHERE   IP = #{ip}
            AND VISIT_DT = TO_CHAR(NOW(), 'YYYY-MM-DD')
    </select>

    <insert id="insertVisitLog">
        INSERT INTO VISIT_LOG
        (ip, visit_dt, visit_count, user_agent)
        VALUES(
                #{ip}
            ,   TO_CHAR(now(), 'YYYY-MM-DD')
            ,   1
            ,   #{userAgent}
        )
    </insert>

    <update id="updateVisitLog">
        UPDATE VISIT_LOG
        SET     VISIT_COUNT = VISIT_COUNT + 1
        WHERE   IP = #{ip}
            AND VISIT_DT = TO_CHAR(NOW(), 'YYYY-MM-DD')
    </update>

    <select id="checkVanish" resultType="int">
        SELECT  COUNT(*)
        FROM    VANISH_MAP_DATA
        WHERE   ID = #{id}
    </select>

    <insert id="insertVanish">
        INSERT INTO VANISH_MAP_DATA
        (id, request_cnt, init_dt, vanish_yn)
        VALUES (
                #{id}
            ,   1
            ,   NOW()
            ,   'y'
        )
    </insert>

    <update id="updateVanish">
        update  vanish_map_data
        set     request_cnt = request_cnt + 1
        where   id = #{id}
    </update>
</mapper>